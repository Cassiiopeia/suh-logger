plugins {
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java-library'
    id 'maven-publish'
}

group = 'me.suhsaechan'
version = project.findProperty('version') ?: '0.0.3'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    lombokVersion = '1.18.38'
}

dependencies {
    // ---- 런타임/컴파일 ----
    implementation 'org.springframework.boot:spring-boot-starter:3.4.4'
    implementation 'org.springframework.boot:spring-boot-starter-aop:3.4.4'

//    implementation 'org.springframework.boot:spring-boot-starter-web:3.4.4' : 경량화
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    compileOnly 'org.springframework:spring-web:6.1.12'

    api 'com.fasterxml.jackson.core:jackson-databind:2.18.3'
    api 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.3'

    compileOnly     "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // ---- 테스트 ----
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.4.4' // :contentReference[oaicite:6]{index=6}
    testImplementation 'org.springframework:spring-web:6.1.12'
}

tasks.named('test') {
    useJUnitPlatform()
}

// 일반 JAR 생성
bootJar { enabled = false }
jar     { enabled = true }

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name        = 'suh-logger'
                description = '서새찬 로깅 라이브러리'
                url         = 'https://github.com/Cassiiopeia/suh-logger/'
            }
        }
    }
    repositories {
        mavenLocal()
        maven {
            name = 'nexus'
            url  = uri(
                    version.endsWith('SNAPSHOT')
                            ? "http://suh-project.synology.me:9999/repository/maven-snapshots/"
                            : "http://suh-project.synology.me:9999/repository/maven-releases/"
            )
            allowInsecureProtocol = true
            credentials {
                username = project.findProperty('nexusUsername')
                password = project.findProperty('nexusPassword')
            }
        }
    }
}
